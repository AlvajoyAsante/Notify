	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_main
_main:
	or	a, a
	sbc	hl, hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_notify_Create
_notify_Create:
	ld	hl, -6
	call	__frameset
	scf
	sbc	hl, hl
	ld	(ix - 3), hl
	call	_notify_Load
	ld	a, (_notify_amount)
	cp	a, -1
	jr	z, BB1_2
	ld	bc, 46
	inc	a
	ld	(_notify_amount), a
	ld	de, (_notify)
	or	a, a
	sbc	hl, hl
	ld	l, a
	call	__imulu
	push	hl
	push	de
	call	_realloc
	push	hl
	pop	de
	pop	hl
	pop	hl
	ld	(_notify), de
	ld	a, (_notify_amount)
	or	a, a
	sbc	hl, hl
	ld	l, a
	dec	hl
	ld	bc, 46
	ld	(ix - 3), hl
	call	__imulu
	push	hl
	pop	bc
	push	de
	pop	iy
	add	iy, bc
	ld	(ix - 6), iy
	ld	hl, 9
	push	hl
	ld	hl, (ix + 9)
	push	hl
	pea	iy + 3
	call	_strncpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 30
	push	hl
	ld	hl, (ix + 12)
	push	hl
	ld	iy, (ix - 6)
	pea	iy + 12
	call	_strncpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 6)
	ld	iy, (ix - 6)
	ld	(iy), hl
BB1_2:
	ld	hl, (ix - 3)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_notify_Delete
_notify_Delete:
	ld	hl, -6
	call	__frameset
	ld	a, (ix + 6)
	ld	(ix - 6), a
	call	_notify_Load
	ld	a, (_notify_amount)
	ld	e, a
	or	a, a
	jr	z, BB2_2
	dec	e
	ld	a, e
	ld	(_notify_amount), a
	ld	hl, (_notify)
	ld	(ix - 3), hl
	ld	iy, 0
	ld	a, (ix - 6)
	ld	iyl, a
	lea	hl, iy
	ld	bc, 46
	call	__imulu
	push	hl
	pop	bc
	ld	hl, (ix - 3)
	add	hl, bc
	ld	(ix - 6), hl
	ld	iyl, e
	lea	hl, iy
	ld	bc, 46
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 3)
	add	hl, de
	ld	de, (ix - 6)
	ldir
	lea	hl, iy
	ld	bc, 46
	call	__imulu
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_realloc
	pop	de
	pop	de
	ld	(_notify), hl
BB2_2:
	ld	sp, ix
	pop	ix
	jp	_notify_Save
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_notify_DeleteAll
_notify_DeleteAll:
	xor	a, a
	ld	hl, 46
	ld	(_notify_amount), a
	ld	de, (_notify)
	push	hl
	push	de
	call	_realloc
	pop	de
	pop	de
	ld	(_notify), hl
	jp	_notify_Save
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_notify_Alert
_notify_Alert:
	ld	hl, -6
	call	__frameset
	ld	a, (_notify_amount)
	ld	l, a
	or	a, a
	jp	z, BB4_11
	ld	de, 0
	ld	e, l
	dec	de
	ld	(ix - 3), de
	call	_notify_Load
	ld	hl, (_notify)
	ld	(ix - 6), hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	bc, 46
	ld	hl, (ix - 3)
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 6)
	add	hl, de
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB4_5
	ld	hl, 165
	ld	de, 40
	push	de
	push	hl
	ld	hl, 15
	push	hl
	ld	hl, 77
	push	hl
	call	_oxy_FillRoundRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 10
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 14
	push	hl
	ld	hl, 163
	push	hl
	ld	hl, 16
	push	hl
	ld	hl, 78
	push	hl
	call	_oxy_FillRoundRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 10
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	ld	bc, 46
	ld	hl, (ix - 3)
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix - 6)
	add	iy, de
	ld	a, (iy + 3)
	or	a, a
	jr	z, BB4_4
	ld	hl, 18
	push	hl
	ld	hl, 79
	push	hl
	pea	iy + 3
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
BB4_4:
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 23
	push	hl
	ld	hl, 163
	push	hl
	ld	hl, 31
	push	hl
	ld	hl, 78
	push	hl
	call	_oxy_FillRoundRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	ld	bc, 46
	ld	hl, (ix - 3)
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix - 6)
	add	iy, de
	ld	a, (iy + 12)
	or	a, a
	ld	hl, 33
	push	hl
	ld	hl, 79
	jp	BB4_8
BB4_5:
	ld	hl, 205
	ld	de, 40
	push	de
	push	hl
	ld	hl, 15
	push	hl
	ld	hl, 57
	push	hl
	call	_oxy_FillRoundRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 38
	push	hl
	push	hl
	ld	hl, 16
	push	hl
	ld	hl, 57
	push	hl
	call	_oxy_FillRoundRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 10
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 14
	push	hl
	ld	hl, 163
	push	hl
	ld	hl, 16
	push	hl
	ld	hl, 97
	push	hl
	call	_oxy_FillRoundRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 10
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	ld	bc, 46
	ld	hl, (ix - 3)
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix - 6)
	add	iy, de
	ld	a, (iy + 3)
	or	a, a
	jr	z, BB4_7
	ld	hl, 19
	push	hl
	ld	hl, 102
	push	hl
	pea	iy + 3
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
BB4_7:
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 23
	push	hl
	ld	hl, 163
	push	hl
	ld	hl, 31
	push	hl
	ld	hl, 101
	push	hl
	call	_oxy_FillRoundRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	ld	bc, 46
	ld	hl, (ix - 3)
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix - 6)
	add	iy, de
	ld	a, (iy + 12)
	or	a, a
	ld	hl, 33
	push	hl
	ld	hl, 102
BB4_8:
	push	hl
	pea	iy + 12
	call	nz, _gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
BB4_9:
	call	_os_GetCSC
	or	a, a
	jr	z, BB4_9
	ld	hl, (ix - 3)
	push	hl
	call	_notify_Delete
	pop	hl
BB4_11:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	private	_oxy_FillRoundRectangle
_oxy_FillRoundRectangle:
	ld	hl, -24
	call	__frameset
	ld	a, (ix + 9)
	ld	iyl, a
	ld	de, (ix + 12)
	ld	a, (ix + 15)
	ld	bc, 0
	push	bc
	pop	hl
	ex	de, hl
	ld	e, iyl
	ex	de, hl
	ld	(ix - 6), hl
	ld	(ix - 3), bc
	ld	c, a
	ld	(ix - 24), bc
	push	bc
	pop	hl
	ld	bc, -2
	add	hl, bc
	ld	(ix - 15), hl
	ld	bc, 1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	dec	bc
	call	pe, __setflag
	push	de
	pop	iy
	jp	p, BB5_2
	push	bc
	pop	iy
BB5_2:
	dec	de
	ld	(ix - 21), de
	ld	hl, (ix - 3)
	ld	de, (ix + 6)
	ld	l, e
	ld	h, d
	ld	(ix - 3), hl
	ld	hl, (ix - 6)
	inc	hl
	ld	(ix - 18), hl
BB5_3:
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	jr	z, BB5_9
	ld	(ix - 12), iy
	ld	iy, (ix - 3)
	add	iy, bc
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	(ix - 9), bc
	jr	z, BB5_6
	ld	hl, (ix - 21)
	or	a, a
	sbc	hl, bc
	jr	nz, BB5_7
BB5_6:
	ld	hl, (ix - 15)
	push	hl
	ld	hl, (ix - 18)
	jr	BB5_8
BB5_7:
	ld	hl, (ix - 24)
	push	hl
	ld	hl, (ix - 6)
BB5_8:
	push	hl
	push	iy
	call	_gfx_VertLine
	pop	hl
	pop	hl
	pop	hl
	ld	bc, (ix - 9)
	inc	bc
	ld	iy, (ix - 12)
	jr	BB5_3
BB5_9:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_notify_Tray
_notify_Tray:
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_notify_Load
_notify_Load:
	ld	hl, -7
	call	__frameset
	ld	hl, _.str
	ld	de, _.str.1
	xor	a, a
	ld	(ix - 1), a
	push	de
	push	hl
	call	_ti_Open
	ld	e, a
	pop	hl
	pop	hl
	or	a, a
	jp	z, BB7_5
	ld	hl, _NOTIFY_VERSION_COMPARE
	ld	bc, 1
	ld	(ix - 4), de
	push	de
	push	bc
	push	bc
	push	hl
	call	_ti_Read
	pop	de
	pop	de
	pop	de
	pop	de
	ld	a, (_NOTIFY_VERSION_COMPARE)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB7_3
	or	a, a
	jr	nz, BB7_5
BB7_3:
	ld	hl, _notify_amount
	ld	de, (ix - 4)
	push	de
	ld	de, 1
	push	de
	push	de
	push	hl
	call	_ti_Read
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	a, (_notify_amount)
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	bc, 46
	call	__imulu
	ld	(ix - 7), hl
	push	hl
	call	_malloc
	pop	de
	ld	(_notify), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB7_5
	ld	a, 1
	ld	(ix - 1), a
	ld	de, (ix - 4)
	push	de
	ld	de, 1
	push	de
	ld	de, (ix - 7)
	push	de
	push	hl
	call	_ti_Read
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 4)
	push	hl
	call	_ti_Close
	pop	hl
BB7_5:
	ld	a, (ix - 1)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_notify_Save
_notify_Save:
	ld	hl, -3
	call	__frameset
	xor	a, a
	ld	hl, _.str
	ld	de, _.str.2
	ld	(_NOTIFY_VERSION_COMPARE), a
	push	de
	push	hl
	call	_ti_Open
	ld	e, a
	ld	(ix - 3), de
	pop	hl
	pop	hl
	push	de
	ld	hl, 1
	push	hl
	push	hl
	ld	hl, _NOTIFY_VERSION_COMPARE
	push	hl
	call	_ti_Write
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	push	hl
	ld	hl, _notify_amount
	push	hl
	call	_ti_Write
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	de, (_notify)
	ld	a, (_notify_amount)
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	bc, 46
	call	__imulu
	ld	bc, (ix - 3)
	push	bc
	ld	bc, 1
	push	bc
	push	hl
	push	de
	call	_ti_Write
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (_notify)
	push	hl
	call	_free
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	call	_ti_SetArchiveStatus
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	call	_ti_Close
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"NOTIFY", 0

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	"r", 0

	section	.bss,"aw",@nobits
	public	_NOTIFY_VERSION_COMPARE
_NOTIFY_VERSION_COMPARE:
	rb	1

	section	.bss,"aw",@nobits
	public	_notify_amount
_notify_amount:
	rb	1

	section	.bss,"aw",@nobits
	public	_notify
_notify:
	rb	3

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	"w", 0

	ident	"clang version 14.0.0 (https://github.com/jacobly0/llvm-project 56af4f86925b7eebf23dae240e0a77c64066179e)"
	ident	"clang version 14.0.0 (https://github.com/jacobly0/llvm-project 56af4f86925b7eebf23dae240e0a77c64066179e)"
	ident	"clang version 14.0.0 (https://github.com/jacobly0/llvm-project 56af4f86925b7eebf23dae240e0a77c64066179e)"
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_malloc
	extern	_gfx_SetTextBGColor
	extern	_gfx_SetTextFGColor
	extern	_ti_Write
	extern	_ti_Close
	extern	_strncpy
	extern	_ti_Read
	extern	__setflag
	extern	_gfx_VertLine
	extern	_ti_SetArchiveStatus
	extern	__Unwind_SjLj_Unregister
	extern	__imulu
	extern	_ti_Open
	extern	_gfx_SetColor
	extern	_gfx_PrintStringXY
	extern	_os_GetCSC
	extern	_realloc
	extern	_free
